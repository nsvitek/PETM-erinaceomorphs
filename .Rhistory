error3d<-function(ANOVA,r,f1=1,f2=2){ #f1 and f2 are which factors you want to compare
#default f1 and f2 assume only one level in ANOVA, not nested
# Fruciano 2016 repeatibility
s.among<-(ANOVA$MS[f1]-ANOVA$MS[f2])/r
repeatability<-s.among/(ANOVA$MS[f2]+s.among)
# Yezerinac et al. 1992 p. 474 % measurement error
percent_measurement_error<-(ANOVA$MS[f2]/(ANOVA$MS[f2]+s.among))*100
result<-list(repeatability,percent_measurement_error)
names(result)<-c("repeatability","PME")
return(result)
}
error3d
?plot
error2d<-function(ANOVA,r){
# Yezerinac et al. 1992 p. 474 % measurement error
s.within<-ANOVA$`Mean Sq`[2]
s.among<-(ANOVA$`Mean Sq`[1]-s.within)/r
percent_measurement_error<-(s.within/(s.within+s.among))*100
repeatability<-100-percent_measurement_error
result<-list(repeatability,percent_measurement_error)
names(result)<-c("repeatability","PME")
return(result)
}
2+2
?mean
a<-4
b<-c(4,5,6)
a+b
data(iris)
iris
is.matrix(iris)
is.data.frame(iris)
is.data.frame(iris)
library(ggthemes) #to get Paul Tol colors
#notice here that I set a palette called "color.mouse" that uses a Paul Tol basic palette for four colors
color.mouse<-ptol_pal()(4)
?runif
plot(x,y)
x<-rnorm(100)
y<-c(runif(25,min=0,max=1),runif(25,min=1,max=2),runif(25,min=2,max=3),runif(25,min=3,max=4))
plot(x,y)
rep(c("A","B","C","D"), each=25)
color.mouse
rando.data<-data.frame(x=rnorm(100),
y=c(runif(25,min=0,max=1),runif(25,min=1,max=2),runif(25,min=2,max=3),runif(25,min=3,max=4)),
variable=rep(c("A","B","C","D"), each=25))
plot(rando.data$x,rando.data$y)
plot(rando.data$x,rando.data$y,fill=variable[color.mouse])
plot(rando.data$x,rando.data$y,fill=rando.data$variable[color.mouse])
plot(rando.data$x,rando.data$y,fill=rando.data$variable[color.mouse],pch=21)
plot(rando.data$x,rando.data$y,bg=rando.data$variable[color.mouse],pch=21)
warnings()
#one important note: for base R to use a variable as coloring index, it has to be a factor
rando.data$variable<-factor(rando.data$variable)
plot(rando.data$x,rando.data$y,bg=rando.data$variable[color.mouse],pch=21)
plot(rando.data$x,rando.data$y,color=rando.data$variable[color.mouse],pch=19)
plot(rando.data$x,rando.data$y,col=rando.data$variable[color.mouse],pch=19)
warnings()
plot(rando.data$x,rando.data$y,col=color.mouse[rando.data$variable],pch=19)
#make some random data to plot
rando.data<-data.frame(x=rnorm(100),
y=c(runif(25,min=0,max=1),runif(25,min=1,max=2),runif(25,min=2,max=3),runif(25,min=3,max=4)),
variable=rep(c("A","B","C","D"), each=25))
plot(rando.data$x,rando.data$y,col=color.mouse[rando.data$variable],pch=19)
#plot. Note that the structure is color.palette[index.by.factored.variable]
plot(rando.data$x,rando.data$y,col=color.mouse[rando.data$variable],pch=19)
#one important note: for base R to use a variable as coloring index, it has to be a factor
rando.data$variable<-factor(rando.data$variable)
#plot. Note that the structure is color.palette[index.by.factored.variable]
plot(rando.data$x,rando.data$y,col=color.mouse[rando.data$variable],pch=19)
legend("topleft",legend=rando.data$variable,col=color.mouse,pch=19)
color.mouse
legend("topleft",legend=levels(rando.data$variable),col=color.mouse,pch=19)
library(ggthemes) #to get Paul Tol colors
#notice here that I set a palette called "color.mouse" that uses a Paul Tol basic palette for four colors
color.mouse<-ptol_pal()(4)
#make some random data to plot
rando.data<-data.frame(x=rnorm(100),
y=c(runif(25,min=0,max=1),runif(25,min=1,max=2),runif(25,min=2,max=3),runif(25,min=3,max=4)),
variable=rep(c("A","B","C","D"), each=25))
#one important note: for base R to use a variable as coloring index, it has to be a factor
rando.data$variable<-factor(rando.data$variable)
#plot. Note that the structure is color.palette[index.by.factored.variable]
plot(rando.data$x,rando.data$y,col=color.mouse[rando.data$variable],pch=19)
legend("topleft",legend=levels(rando.data$variable),col=color.mouse,pch=19)
